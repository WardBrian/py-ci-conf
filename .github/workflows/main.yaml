name: Testing

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch: {}


env:
  CMDSTAN: "False" # Or a version, e.g. "2.31.0"

jobs:
  required:
    name: ${{matrix.os}} / ${{matrix.python-version}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out github
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (python)
        run: |
          python -m pip install --upgrade pip wheel codecov
          python -m pip install -r requirements-test.txt

      - name: CmdStan installation cacheing
        if: env.CMDSTAN != "False"
        uses: actions/cache@v3
        with:
          path: ~/.cmdstan
          key: ${{ runner.os }}-cmdstan-${{ env.CMDSTAN }}

      - name: Install CmdStan (Linux, macOS)
        if: ${{ env.CMDSTAN != "False" && matrix.os != 'windows-latest' }}
        run: |
          python -m cmdstanpy.install_cmdstan --version "${{ env.CMDSTAN }}" --cores 2

      - name: Install CmdStan (Windows)
        if: ${{ env.CMDSTAN != "False" && matrix.os == 'windows-latest' }}
        run: |
          python -m cmdstanpy.install_cmdstan --compiler --version "${{ env.CMDSTAN }}" --cores 2

      - name: Install package
        run: |
          python -m pip install .

      - name: Run tests
        run: |
          pytest -v --cov --cov-report term

      - name: Upload codecoverage
        continue-on-error: true
        run: |
          codecov
